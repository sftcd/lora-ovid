



lpwan                                                         S. Farrell
Internet-Draft                                    Trinity College Dublin
Intended status: Informational                                  A. Yegin
Expires: April 14, 2017                                         Actility
                                                        October 11, 2016


                            LoRaWAN Overview
                  draft-farrell-lpwan-lora-overview-00

Abstract

   Low Power Wide Area Networks (LPWAN) are wireless technologies
   covering different Internet of Things (IoT) applications.  The common
   characteristics for LPWANs are large coverage, low bandwidth, small
   packet and application layer data sizes and long battery life
   operation.  One of these technologies is LoRaWAN developed by the
   LoRa Alliance.  LoRaWAN targets key requirements of the Internet of
   things such as secure bi-directional communication, mobility and
   localization services.  This memo is an informational overview of
   LoRaWAN and gives the principal characteristics and restrictions of
   this technology in order to help with the IETF work for providing
   IPv6 connectivity over LoRaWAN along with other LPWANs.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on April 14, 2017.

Copyright Notice

   Copyright (c) 2016 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents



Farrell & Yegin          Expires April 14, 2017                 [Page 1]

Internet-Draft                lora overview                 October 2016


   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   3
   3.  Radio Spectrum  . . . . . . . . . . . . . . . . . . . . . . .   4
   4.  MAC Layer . . . . . . . . . . . . . . . . . . . . . . . . . .   6
   5.  Names and Addressing  . . . . . . . . . . . . . . . . . . . .   7
   6.  Planned Changes . . . . . . . . . . . . . . . . . . . . . . .   9
   7.  Security Considerations . . . . . . . . . . . . . . . . . . .  10
     7.1.  Payload Encryption and Data Integrity . . . . . . . . . .  10
     7.2.  Key Derivation  . . . . . . . . . . . . . . . . . . . . .  11
     7.3.  Cryptographic Optimisations . . . . . . . . . . . . . . .  11
     7.4.  Other Security and Privacy Considerations . . . . . . . .  12
   8.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  12
   9.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  12
   10. Implementation Status . . . . . . . . . . . . . . . . . . . .  12
     10.1.  LoRAMac-node . . . . . . . . . . . . . . . . . . . . . .  14
   11. Informative References  . . . . . . . . . . . . . . . . . . .  14
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  14

1.  Introduction

   [[Comments to be addressed before publication are in double square
   brackets like this one]]

   LoRaWAN is a wireless technology for long-range low-power low-data-
   rate applications developed by the LoRa Alliance, a membership
   consortium.  <https://www.lora-alliance.org/> LoRaWAN networks are
   typically organized in a star-of-stars topology in which gateways
   relay messages between end-devices and a central "network server" in
   the backend.  Gateways are connected to the network server via IP
   links while end-devices use single-hop LoRaWAN communication that can
   be received at one or more gateways.  All communication is generally
   bi-directional, although uplink communication from end-devices to the
   network server are favoured in terms of overall bandwidth
   availability.

   In LoRaWAN networks, end-device transmissions may be received at
   multiple gateways, so during nominal operation a network server may
   see multiple instances of the same uplink message from an end-device.



Farrell & Yegin          Expires April 14, 2017                 [Page 2]

Internet-Draft                lora overview                 October 2016


   To maximize both battery life of end-devices and overall network
   capacity, the LoRaWAN network infrastructure manages the data rate
   and RF output for each end-device individually by means of an
   adaptive data rate (ADR) scheme.  End-devices may transmit on any
   channel available at any time, using any of the currently available
   data rates.

   This memo provides an overview of the LoRaWAN technology for the
   Internet community, but the definitive specification [LoRaSpec] is
   that produced by the LoRa Alliance.  [[What is the right version on
   which to base this?  I'm using 1.0.1 from Feb 2016 for now.  Is that
   public?]]

2.  Terminology

   [[Not sure if 2119 terms will be needed.  Leave it here for now.]]
   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].

   This section introduces some LoRaWAN terms.

   o  End-device: a LoRa client device, sometimes called a mote.
      Communicates with gateways.

   o  Gateway: a radio on the infrastructure-side, sometimes called a
      concentrator or base-station.  Communicates with end-devices and,
      via the Internet, with a network server. [[one only?]]

   o  Network Server: Provides application layer functions as well as
      being the target for messages received from end-devices via
      gateways and vice-versa.

   o  Classes A, B and C are classes of end-device.  All LoRaWAN devices
      have bi-directional radios.  The minimal end-device is class A and
      all devices need to support acting as a class A device.  Class B
      have additional end-device receive slots allocated for better
      gateway to end-device bandwidth.  Class C end-devices can receive
      at any time they are not sending and hence have even better
      inbound (to end-device) bandwidth.  Classes B and C are not
      further discussed in this memo.  [[Are these really classes of
      device or modes of operation?  Maybe omit classes B and C from the
      body of the draft for and provide some details in an appendix?]]

   o  Uplink message: refers to communications from end-device to
      network server via one or more gateways.





Farrell & Yegin          Expires April 14, 2017                 [Page 3]

Internet-Draft                lora overview                 October 2016


   o  Downlink message: refers to communications from network server via
      one gateway to a single end-device.

3.  Radio Spectrum

   LoRaWAN radios make use of ISM bands, for example, 433MHz and 868MHz
   within the European Union and 915Mhz in the Americas.

   The end-device changes channel in a pseudo-random fashion for every
   transmission to help make the system more robust to interference.

   As with other LPWAN radio technologies, LoRaWAN end-devices respect
   the frequency, power and maximum transmit duty cycle requirements for
   the sub-band used and local regulations.  In many cases, this means
   an end-device only transmitting for 1% of the time.  In some cases
   the LoRaWAN specification calls for end-devices to transmit less
   often than is called for by the ISM band regulations in order to
   avoid congestion.  The precise details of all of these are region
   specific and vary significantly, however there is (almost) always a
   specific time slot at which the next transmission can be made.

   Figure 1 below shows that after a transmission slot a Class A device
   turns on its receiver for two short receive windows that are offset
   from the end of the transmission window.  The frequencies and data
   rate chosen for these receive windows depend on those used for the
   transmit window.  If a downlink message preamble is detected during a
   receive window, then the end-device keeps the radio on in order to
   reeive the frame.

   End-devices can only transmit a 2nd uplink frame after the end of the
   associated receive windows.  When a device joins a LoRaWAN network
   (see Section 4 for details), there are similar timeouts on parts of
   that process.

   |----------------------------|         |--------|     |--------|
   |             Tx             |         |   Rx   |     |   Rx   |
   |----------------------------|         |--------|     |--------|
                                |---------|
                                 Rx delay 1
                                |------------------------|
                                 Rx delay 2

        Figure 1: LoRaWAN Class A transmission and reception window

   Given the different regional requirements the full specification for
   the LoRaWan physical layer is complex (taking up more than 30 pages
   of the specification) so we will not try to reproduce all of that
   here.  Instead and mainly to illustrate the kinds of issue



Farrell & Yegin          Expires April 14, 2017                 [Page 4]

Internet-Draft                lora overview                 October 2016


   encountered, in Table 1 we present some of the default settings for
   one ISM band (without fully explaining those here) and in Table 2 we
   describe maxima and minima for some parameters of interest to those
   defining ways to use IETF protocols over the LoRaWAN MAC layer.

   +------------------------+------------------------------------------+
   |       Parameters       |              Default Value               |
   +------------------------+------------------------------------------+
   |       Rx delay 1       |                   1 s                    |
   |                        |                                          |
   |       Rx delay 2       |    2 s (must be RECEIVE_DELAY1 + 1s)     |
   |                        |                                          |
   |      join delay 1      |                   5 s                    |
   |                        |                                          |
   |      join delay 2      |                   6 s                    |
   |                        |                                          |
   |     868MHz Default     | 3 (868.1,868.2,868.3), date rate: 0.3-5  |
   |        channels        |                   kbps                   |
   +------------------------+------------------------------------------+

                Table 1: Default settings for EU868MHz band

   +-----------------------------------------------+--------+----------+
   | Parameter/Notes                               |  Min   |   Max    |
   +-----------------------------------------------+--------+----------+
   | Duty Cycle: some but not all ISM bands impose |   1%   | no-limit |
   | a limit in terms of how often an end-device   |        |          |
   | can transmit. In some cases LoRaWAN is more   |        |          |
   | stringent in an attempt to avoid congestion.  |        |          |
   |                                               |        |          |
   | EU 868MHz band data rate/frame-size           |  250   |  50000   |
   |                                               | bits/s | bits/s : |
   |                                               |  : 59  |   250    |
   |                                               | octets |  octets  |
   |                                               |        |          |
   | US 915MHz band data rate/frame-size           |  980   |  21900   |
   |                                               | bits/s | bits/s : |
   |                                               |  : 19  |   250    |
   |                                               | octets |  octets  |
   +-----------------------------------------------+--------+----------+

         Table 2: Minima and Maxima for various LoRaWAN Parameters

   Note that in the case of the smallest frame size (19 octets), 8
   octets are required for LoRa MAC layer headers leaving only 11 octets
   for payload (including MAC layer options).  However, those settings
   do not apply for the join procedure - end-devices are required to use
   a channel with a 250 octet frame size for the join procedure.



Farrell & Yegin          Expires April 14, 2017                 [Page 5]

Internet-Draft                lora overview                 October 2016


   [[I'm not yet following what an end-device does if it needs to send a
   join-request >11 octets long via DR0 in the US915Mhz case.  Does it
   only transmit on DR4?. P39, lines28-31 of the 1.0.1 spec aren't clear
   on that that I can see.]]

4.  MAC Layer

   Uplink and downlink higher layer data is carried in a MACPayload.
   There is a concept of "ports" (an optional 8 bit value) to handle
   different applications on an end-device.  Port zero is reserved for
   LoRaWAN specific messaging, such as the join-procedure.

   The header also distinguishes the uplink/downlink directions and
   whether or not an acknowledgement ("confirmation") is required from
   the peer.

   In addition to carrying higher layer PDUs there are Join-Request and
   Join-Response (aka Join-Accept) messages for handling network access.
   And so-called "MAC commands" up to 15 bytes long (e.g. for [[what]])
   can be piggybacked in an options field ("FOpts").

   All payloads are encrypted and ciphertexts are protected with a
   cryptographic Message Integrity Check (MIC) - see Section 7 for
   details.

   LoRaWAN end-devices can choose various different data rates from a
   menu of available rates (dependent on the frequencies in use).  It is
   however, recommended that end-devices set the Adaptive Data Rate
   ("ADR") bit in the MAC layer which is a signal that the network
   should control the data rate (via MAC commands to the end-device).
   The network can also assert the ADR bit and control data rates at
   it's discretion.  The goal is to ensure minimal on-time for radios
   whilst increasing throughput and reliability when possible.  Other
   things being equal, the effect should be that end-devices closer to a
   gateway can successfully use higher data rates, whereas end-devices
   further from all gateways still receive connectivity though at a
   lower data rate.

   Data rate changes can be validated via a scheme of acks from the
   network with a fall-back to lower rates in the event that downlink
   acks go missing.

   There are 16 (or 32) bit frame counters maintained in each direction
   that are incremented on each transmission (but not re-transmissions)
   that are not re-used.  When the device supports a 32 bit counter,
   then only the least significant 16 bits are sent in the MAC header,
   but all 32 bits are used in cryptographic operations.  (If an end-




Farrell & Yegin          Expires April 14, 2017                 [Page 6]

Internet-Draft                lora overview                 October 2016


   device only supports a 16 bit counter internally, then the topmost 16
   bits are set to zero.)

   There are a number of MAC commands for: Link and device status
   checking, ADR and duty-cycle negotiation, managing the RX windows and
   radio channel settings.  For example, the link check response message
   allows the network server (in response to a request from an end-
   device) to inform an end-device about the signal attenuation seen
   most recently at a gateway, and to also tell the end-device how many
   gateways received the corresponding link request MAC command.

   Some MAC commands are initiated by the network server.  For example,
   one command allows the network server to ask an end-device to reduce
   it's duty-cycle to only use a proportion of the maximum allowed in a
   region.  Another, allows the network server to query the end-device's
   power status with the response from the end-device specifying whether
   it has an external power source or is battery powered (in which case
   a relative battery level is also sent to the network server).

   The network server can also inform an end-device about channel
   assignments (mid-point frequencies and data rates).  Of course, these
   must also remain within the bands assigned for the band and region.

5.  Names and Addressing

   A LoRaWAN network has a short network identifer ("NwkID") which is a
   seven bit value.  A private network (common for LoRaWAN) can use the
   value zero.  If a network wishes to support "foreign" end-devices
   then the NwkID needs to be registered with the LoRA alliance, in
   which case the NwkID is the seven least significant bits of a
   registered 24-bit NetID.  (Note however, that the methods for
   "roaming" are currently being enhanced within the LoRA Alliance, so
   the situation here is somewhat fluid.)

   In order to operate nominally on a LoRaWAN network, a device needs a
   32-bit device address, which is the catentation of the NwkID and a
   25-bit device-specific network address that is assigned when the
   device "joins" the network (see below for the join procedure) or that
   is pre-provisioned into the device.

   [[Ok, people will wonder, as do I: why the split of 32 into 7+25?
   That seems a bit odd, so likely worth explaining just to forstall the
   inevitable email queries.]]

   End-devices are assumed to work with one or a quite limited number of
   applications, which matches most LoRaWAN use-cases.  The applications
   are identified by a 64-bit AppEUI, which is assumed to be a
   registered IEEE EUI64 value.



Farrell & Yegin          Expires April 14, 2017                 [Page 7]

Internet-Draft                lora overview                 October 2016


   In addition, a device needs to have two symmetric session keys, one
   for protecting network artefacts (port=0), the NwkSKey, and another
   for protecting appliction layer traffic, the AppSKey.  Both keys are
   used for 128 bit AES cryptgraphic operations.  (See Section 7 for
   details.)

   So, one option is for an end-device to have all of the above, plus
   channel information, somehow (pre-)provisioned, in which case the
   end-device can simply start transmitting.  This is achievable in many
   cases via out-of-band means given the nature of LoRaWAN networks.
   Table 3 summarises these values.

   +---------+---------------------------------------------------------+
   | Value   | Description                                             |
   +---------+---------------------------------------------------------+
   | DevAddr | DevAddr (32-bits) =  NwkId (7-bits) + device-specific   |
   |         | address (25 bits)                                       |
   |         |                                                         |
   | AppEUI  | IEEE EUI64 naming the application                       |
   |         |                                                         |
   | NwkSKey | 128 bit network session key for use with AES            |
   |         |                                                         |
   | AppSKey | 128 bit application session key for use with AES        |
   +---------+---------------------------------------------------------+

              Table 3: Values required for nominal operation

   As an alternative, end-devices can use the LoRaWAN join procedure in
   order to setup some of these values and dynamically gain access to
   the network.

   To use the join procedure, an end-device must still know the AppEUI.
   In addition to the AppEUI, end-devices using the join procedure need
   to also know a different (long-term) symmetric key that is bound to
   the AppEUI - this is the application key (AppKey), and is distinct
   from the application session key (AppSKey).  The AppKey is required
   to be specific to the device, that is, each end-device should have a
   different AppKey value.  And finally the end-device also needs a
   long-term identifier for itself, syntactically also an EUI-64, and
   known as the device EUI or DevEUI.  Table 4 summarises these values.











Farrell & Yegin          Expires April 14, 2017                 [Page 8]

Internet-Draft                lora overview                 October 2016


     +---------+----------------------------------------------------+
     | Value   | Description                                        |
     +---------+----------------------------------------------------+
     | DevEUI  | IEEE EUI64 naming the device                       |
     |         |                                                    |
     | AppEUI  | IEEE EUI64 naming the application                  |
     |         |                                                    |
     | AppKey  | 128 bit long term application key for use with AES |
     +---------+----------------------------------------------------+

                Table 4: Values required for join procedure

   The join procedure involves a special exchange where the end-device
   asserts the AppEUI and DevEUI (integrity protected with the long-term
   AppKey, but not encrypted) in a Join-request uplink message.  This is
   then routed to the network server which interacts with an entity that
   knows that AppKey to verify the Join-request.  All going well, a
   Join-accept downlink message is returned from the network server to
   the end-device that specifies the 24-bit NetID, 32-bit DevAddr and
   channel information and from which the AppSKey and NwkSKey can be
   derived based on knowledge of the AppKey.  This provides the end-
   device with all the values listed in Table 3.

   There is some special handling related to which channels to use and
   for multiple transmissions for the join-request which is intended to
   ensure a successful join in as many cases as possible.  Join-request
   and Join-accept messages also incldue some random values (nonces) to
   both provide some replay protection and to help ensure the session
   keys are unique per run of the join procedure.  If a Join-request
   fails validation, then no Join-accept message (indeed no message at
   all) is returned to the end-device.  If an end-device is reset then
   it should end up in a state in which it can re-do the join procedure.

6.  Planned Changes

   As with many LPWAN technologies LoRaWAN is constantly evolving both
   in details and in the large.  For example, some detailed changes to
   the cryptography used are being discussed within the LoRa Alliance.
   Whether or not those result in backawards incompatible changes
   (things that affect ciphertext usually do), will be apparent in the
   the latest LoRaWAN specification.

   Various LoRaWAN message formats including the MAC layer have bits
   allocated that would allow for future changes to formats.  In such
   cases, gateways and network-servers will be expected to support
   earlier releases, whereas end-devices may only support one version.





Farrell & Yegin          Expires April 14, 2017                 [Page 9]

Internet-Draft                lora overview                 October 2016


   There is also some scope for vendor-specific ("proprietary")
   extensions to MAC layer messages.

   Larger changes are being considered in terms of connecting together
   multiple networks and allowing end-devices to roam over different
   networks.  These changes are expected to become stable in 2017.
   [[Just a guess, maybe we don't want to say stuff like that, but no
   harm to let folks know roughly what's likely to change in the
   lifetime of the LPWAN WG.]]

7.  Security Considerations

   In this section we describe the use of cryptography and other
   security considerations arising.  This section is not intended as a
   full specification for LoRaWAN security but to be sufficient so that
   future IETF specifications can encompass the required security
   considerations.

7.1.  Payload Encryption and Data Integrity

   All payloads are encrypted and have data integrity.  Frame options
   (used for MAC commands) when sent as a payload (port zero) are
   therefore protected.  MAC commands piggy-backed as frame options
   ("FOpts") are however sent in clear.

   For LoRaWAN version 1.0.x, the NetWSkey session key is used to
   provide data integrity between the end-device and the network server.
   The AppSKey is used to provide data confidentiality between the end-
   device and network server, or to the application "behind" the network
   server, depening on the implementation of the network.  [[CHECK]].

   This way of providing data integity and confidentiality differs from
   today's more common case where an authenticated encryption with
   additional data (AEAD) mode of operation [RFC5116] provides both data
   integrity and confidentiality based on the same session key.  (This
   could change in future versions of LoRaWAN.)  Note though that at
   least in principle the endpoints for the LoRaWAN data integrity and
   confidentiality services might not be operated by the same entities.

   Gateways are not expected to be provided with the AppSKey or NwkSKey,
   all of the infrastructure-side cryptography happens in (or "behind")
   the network server.  [[CHECK]].

   All MAC layer messages have an outer 32-bit Message Integrity Code
   (MIC) calculated using AES-CMAC calculated over the ciphertext
   payload and other headers and using the NwkSkey.





Farrell & Yegin          Expires April 14, 2017                [Page 10]

Internet-Draft                lora overview                 October 2016


   Payloads are encrypted using AES-128, with a counter-mode dervived
   from IEEE 802.15.4 using the AppSKey.

7.2.  Key Derivation

   When session keys are derived from the AppKey as a result of the join
   procedure the Join-accept message payload is specially handled.  In
   this case, the long-term AppKey is directly used to protect the Join-
   accept message content, but the function used is not (as one might
   expect) an aes-encrypt operation, but rather an aes-decrypt operaion.
   The (frankly, weak) justification is that this means that the end-
   device only needs to implement the aes-encrypt operation with the
   AppKey as the key input.  (The counter mode variant for payload
   decryption means the end-device doesn't need the aes-decrypt
   primitive.)

   The Join-accept plaintext is always less than 16 bytes long, so
   electronic code book (ECB) mode is used for protecting Join-accept
   messages.

   In any case the Join-accept contains an AppNonce (a 24 bit value)
   that is recovered on the end-device along with the other Join-accept
   content (e.g.  DevAddr) using an aes-encrypt operation.

   Once the Join-accept payload is available to the end-device the
   session keys are derived from the AppKey, AppNonce and other values
   again using an aes-encrypt operation, and again in ECB mode, with the
   plaintext input being a maximum of 16 octets.

7.3.  Cryptographic Optimisations

   The LoRaWAN specification was developed in a small community and it's
   use of cryptography was arguably over-optimised for the initially
   known use-cases without taking into account the full set of best
   current practices common in the IETF.

   In particular: standard AEAD modes of operation are not used; no
   standard key derivation function (KDF) is used; there is no concept
   of regular re-keying, but any device that loses state can repeat the
   join procedure and hence acquire new session keys; there is no
   concept of algorithm agility other than via changes to the overall
   LoRaWAN MAC protocol and some of the replay-protection aspects of
   payload protection use what might otherwise be considered short
   counters/nonces.  These issues, and other potential changes to the
   details of cryptography are under disussion in the LoRa alliance.






Farrell & Yegin          Expires April 14, 2017                [Page 11]

Internet-Draft                lora overview                 October 2016


7.4.  Other Security and Privacy Considerations

   Other security and privacy issues of note include:

   o  LoRaWAN has no built-in handling of software update.  While this
      is commonly the case, it is perhaps unfortunate.

   o  Sending the DevEUI in clear during the join procedure allows the
      end-device to be (re-)identified by an eavesdropper.

   o  The payload confidentiality mechanism exposes the exact length of
      payloads with no built-in opportunity for padding.  For some
      (perhaps many) LPWAN applications this could be sensitive and
      could expose the plaintext.

   o  Since MAC commands may be sent as options and not only as payload,
      any values sent are visible to a passive attacker but are not
      malleable for an active attacker due to the use of the MIC.

8.  IANA Considerations

   There are no IANA considerations related to this memo.

9.  Acknowledgements

   The authors re-used some text from [I-D.vilajosana-lpwan-lora-hc]

   Thanks to [[your name here]] for comments.

   Stephen Farrell's work on this memo was supported by the Science
   Foundation Ireleand funded CONNECT centre
   <https://connectcentre.ie/>.

10.  Implementation Status

   This section records the status of known implementations of the
   protocol defined by this specification at the time of posting of this
   Internet-Draft, and is based on a proposal described in RFC 7942
   [RFC7942].  The description of implementations in this section is
   intended to assist the IETF in its decision processes in progressing
   drafts to RFCs.  Please note that the listing of any individual
   implementation here does not imply endorsement by the IETF.
   Furthermore, no effort has been spent to verify the information
   presented here that was supplied by IETF contributors.  This is not
   intended as, and must not be construed to be, a catalog of available
   implementations or their features.  Readers are advised to note that
   other implementations may exist.




Farrell & Yegin          Expires April 14, 2017                [Page 12]

Internet-Draft                lora overview                 October 2016


   According to RFC 7942, "this will allow reviewers and working groups
   to assign due consideration to documents that have the benefit of
   running code, which may serve as evidence of valuable experimentation
   and feedback that have made the implemented protocols more mature.
   It is up to the individual working groups to use this information as
   they see fit".

   There are a range of commercial and open-source implementations of
   LoRAWAN nodes and components.

   [[Doubtless more and some more details TBD if we keep this section]]

   RFC 7942 calls for this information for each implementation if that's
   useful to provide:

   o  The organization responsible for the implementation, if any.

   o  The implementation's name and/or a link to a web page where the
      implementation or a description of it can be found.

   o  A brief general description.

   o  The implementation's level of maturity: research, prototype,
      alpha, beta, production, widely used, etc.

   o  Coverage: which parts of the protocol specification are
      implemented.

   o  Version compatibility: what version/versions of the Internet Draft
      are known to be implemented.

   o  Licensing: the terms under which the implementation can be used.
      For example: proprietary, royalty licensing, freely distributable
      with acknowledgement (BSD style), freely distributable with
      requirement to redistribute source (General Public License (GPL)
      style), and other (specify).

   o  Implementation experience: any useful information the implementers
      want to share with the community.

   o  Contact information: ideally a person's name and email address,
      but possibly just a URL or mailing list.

   o  The date when information about this particular implementation was
      last updated.






Farrell & Yegin          Expires April 14, 2017                [Page 13]

Internet-Draft                lora overview                 October 2016


10.1.  LoRAMac-node

   There is a BSD Licensed implementation of the LoRaWAN MAC layer at
   <https://github.com/Lora-net/LoRaMac-node>.

11.  Informative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <http://www.rfc-editor.org/info/rfc2119>.

   [RFC5116]  McGrew, D., "An Interface and Algorithms for Authenticated
              Encryption", RFC 5116, DOI 10.17487/RFC5116, January 2008,
              <http://www.rfc-editor.org/info/rfc5116>.

   [RFC7942]  Sheffer, Y. and A. Farrel, "Improving Awareness of Running
              Code: The Implementation Status Section", BCP 205,
              RFC 7942, DOI 10.17487/RFC7942, July 2016,
              <http://www.rfc-editor.org/info/rfc7942>.

   [I-D.vilajosana-lpwan-lora-hc]
              Vilajosana, X., Dohler, M., and A. Yegin, "Transmission of
              IPv6 Packets over LoRaWAN", draft-vilajosana-lpwan-lora-
              hc-00 (work in progress), July 2016.

   [LoRaSpec]
              LoRa Alliance, "LoRaWAN Specification Version V1.0.1", Feb
              2016, <https://www.lora-alliance.org/portals/0/specs/
              LoRaWAN%20Specification%201R0.pdf>.

Authors' Addresses

   Stephen Farrell
   Trinity College Dublin
   Dublin  2
   Ireland

   Phone: +353-1-896-2354
   Email: stephen.farrell@cs.tcd.ie


   Alper Yegin
   Actility
   Paris, Paris
   FR

   Email: alper.yegin@actility.com



Farrell & Yegin          Expires April 14, 2017                [Page 14]
